{"version":3,"sources":["helpers/OpenWeather.js","components/WeatherInfo.js","components/WeatherForm.js","App.js","index.js"],"names":["OpenWeather","cityName","API_URL","fetch","then","resp","json","data","WeatherInfo","props","className","error","Alert","variant","city","Card","Body","Row","Col","src","icon","alt","description","country","temperature","Button","WeatherForm","event","Form","onSubmit","FormGroup","controlId","Label","Control","type","placeholder","block","App","useState","setCity","Container","lg","e","preventDefault","cityValue","target","elements","value","newCity","name","sys","weather","Math","round","main","temp","catch","console","warn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNASeA,EATK,SAACC,GACjB,IACMC,EAAO,4DAAwDD,EAAxD,+BADE,oCAEf,OAAOE,MAAMD,GACRE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,M,uDC0BPC,EA5BK,SAACC,GAGjB,OACI,sBAAKC,UAAU,OAAf,UACCD,EAAME,OAAS,cAACC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBJ,EAAME,QAE3CF,EAAMK,MACN,cAACC,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,KAAN,UACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKR,UAAU,+DAAf,UACI,qBAAKS,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMW,OACjC,mBAAGV,UAAU,cAAb,SAA4BD,EAAMa,iBAEtC,eAACJ,EAAA,EAAD,CAAKR,UAAU,4CAAf,UACI,+BAAI,sBAAMA,UAAU,OAAhB,SAAwBD,EAAMK,OAAlC,IAA+C,sBAAMJ,UAAU,UAAhB,SAA2BD,EAAMc,aAChF,oBAAGb,UAAU,OAAb,UAAqBD,EAAMe,YAAY,2CACvC,cAACC,EAAA,EAAD,CAAQZ,QAAQ,kBAAhB,iD,gBCDba,EAjBK,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAElB,OACI,cAACZ,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,KAAN,UACI,eAACY,EAAA,EAAD,CAAMC,SAAUF,EAAhB,UACI,eAACG,EAAA,EAAD,CAAWC,UAAU,OAArB,UACI,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,YAAY,oBAE1C,cAACV,EAAA,EAAD,CAAQZ,QAAQ,UAAUqB,KAAK,SAASxB,UAAU,OAAO0B,OAAK,EAA9D,iC,MCiCLC,MAtCf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KAwBA,OACE,eAACC,EAAA,EAAD,CAAW9B,UAAU,MAArB,UACE,oBAAIA,UAAU,mBAAd,yBACA,cAACO,EAAA,EAAD,CAAKP,UAAU,yBAAf,SACE,eAACQ,EAAA,EAAD,CAAKuB,GAAI,EAAT,UACE,cAAC,EAAD,CAAad,MA3BF,SAACe,GAClBA,EAAEC,iBACF,IACMC,EADUF,EAAEG,OAAOC,SAAjBhC,KACeiC,MACnBH,EACF5C,EAAY4C,GACXxC,MAAK,SAAC4C,GACLT,EAAQ,CACNzB,KAAOkC,EAAQC,KACf1B,QAAUyB,EAAQE,IAAI3B,QACtBD,YAAc0B,EAAQG,QAAQ,GAAG7B,YACjCF,KAAI,4CAAwC4B,EAAQG,QAAQ,GAAG/B,KAA3D,WACJI,YAAc4B,KAAKC,MAAML,EAAQM,KAAKC,WAGzCC,MAAMC,QAAQC,MAEfnB,EAAQ,CAAC5B,MAAO,2BAWZ,cAAC,EAAD,eAAiBG,a,YCjC3B6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c50183c5.chunk.js","sourcesContent":["const OpenWeather = (cityName) => {\r\n    const APIkey = '925afc142b8bb472c9a16331774bd384';\r\n    const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${APIkey}`;\r\n    return fetch(API_URL)  \r\n        .then(resp => resp.json())\r\n        .then(data => data)\r\n}\r\n\r\n\r\nexport default OpenWeather\r\n","import React from 'react'\r\nimport { Card, Alert,Button, Col, Row} from 'react-bootstrap'\r\n\r\nconst WeatherInfo = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"pt-4\">\r\n        {props.error && <Alert variant='danger'>{props.error}</Alert>}\r\n        {\r\n            props.city &&  \r\n            <Card>\r\n                <Card.Body>\r\n                    <Row >\r\n                        <Col className=\"d-flex justify-content-center align-items-center flex-column\">\r\n                            <img src={props.icon} alt={props.icon}/>\r\n                            <p className=\"description\">{props.description}</p>\r\n                        </Col>\r\n                        <Col className=\"justify-content-center align-items-center\">\r\n                            <h5><span className=\"city\">{props.city}</span> <span className=\"country\">{props.country}</span></h5>\r\n                            <p className=\"temp\">{props.temperature}<sup>Â°C</sup></p>\r\n                            <Button variant=\"outline-warning\">Convert to Fahrenheit</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInfo\r\n","import React from 'react'\r\nimport { Card, Form, FormGroup, Button } from 'react-bootstrap'\r\n\r\nconst WeatherForm = ({event}) => {\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Form onSubmit={event}>\r\n                    <FormGroup controlId=\"city\">\r\n                        <Form.Label>Name City</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Write a city\"/>\r\n                    </FormGroup>\r\n                    <Button variant=\"success\" type=\"submit\" className=\"mt-2\" block>Get Weather</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default WeatherForm\r\n","import OpenWeather from \"./helpers/OpenWeather\";\nimport React, { useState } from 'react'\nimport {Col, Container, Row} from 'react-bootstrap'\nimport WeatherInfo from \"./components/WeatherInfo\";\nimport WeatherForm from \"./components/WeatherForm\";\nimport './styles/App.css';\n\n\nfunction App() {\n  const [city, setCity] = useState({});\n\n  const getWeather = (e)=>{\n    e.preventDefault();\n    const  {city} = e.target.elements;\n    const cityValue = city.value;\n    if (cityValue) {\n      OpenWeather(cityValue)\n      .then((newCity)=>{\n        setCity({\n          city : newCity.name,\n          country : newCity.sys.country,\n          description : newCity.weather[0].description,\n          icon : `https://openweathermap.org/img/wn/${newCity.weather[0].icon}@2x.png`,\n          temperature : Math.round(newCity.main.temp),\n        });\n      })\n      .catch(console.warn)\n    }else{\n      setCity({error: 'Please enter a city'})\n    }\n  }\n\n\n  return (\n    <Container className=\"p-4\">\n      <h1 className=\"text-center mb-5\">Weather App</h1>\n      <Row className=\"justify-content-center\">\n        <Col lg={6}>\n          <WeatherForm event={getWeather}/> \n          <WeatherInfo {...city}/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/Index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}